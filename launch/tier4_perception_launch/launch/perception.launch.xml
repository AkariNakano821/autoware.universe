<?xml version="1.0"?>
<launch>
  <arg name="obstacle_segmentation_ground_segmentation_param_path"/>
  <arg name="obstacle_segmentation_ground_segmentation_elevation_map_param_path"/>

  <arg name="input/pointcloud" default="/sensing/lidar/concatenated/pointcloud" description="The topic will be used in the detection module"/>
  <arg name="use_vector_map" default="true" description="use vector map in prediction"/>
  <arg name="use_pointcloud_map" default="true" description="use pointcloud map in detection"/>
  <arg name="use_low_height_cropbox" default="true" description="use low height crop filter in clustering"/>
  <arg name="use_pointcloud_container" default="false" description="launch pointcloud container"/>
  <arg name="pointcloud_container_name" default="pointcloud_container"/>

  <!-- Perception module -->
  <group>
    <push-ros-namespace namespace="perception"/>
    <!-- Object segmentation module -->
    <group>
      <push-ros-namespace namespace="obstacle_segmentation"/>
      <include file="$(find-pkg-share tier4_perception_launch)/launch/obstacle_segmentation/ground_segmentation/ground_segmentation.launch.py">
        <arg name="base_frame" value="base_link"/>
        <arg name="use_intra_process" value="true"/>
        <arg name="use_multithread" value="true"/>
        <arg name="use_pointcloud_container" value="$(var use_pointcloud_container)"/>
        <arg name="pointcloud_container_name" value="$(var pointcloud_container_name)"/>
        <arg name="input/pointcloud" value="$(var input/pointcloud)"/>
      </include>
    </group>
  </group>
</launch>
